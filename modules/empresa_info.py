"""
empresa_info.py

Este m√≥dulo tiene como prop√≥sito central gestionar la tabla `empresas` dentro de la base de datos `vacantes.db`.
Su responsabilidad es detectar autom√°ticamente nuevas empresas a partir de la tabla `vacantes` y enriquecer la tabla `empresas`
con informaci√≥n ejecutiva clave, evitando redundancias y permitiendo an√°lisis inteligentes posteriores.

Funciones clave:
- Identificaci√≥n de empresas nuevas que a√∫n no est√°n registradas.
- Obtenci√≥n de informaci√≥n ejecutiva de cada empresa (resumen, sector, tama√±o, presencia en M√©xico, Glassdoor score, etc.).
- Inserci√≥n o actualizaci√≥n autom√°tica de registros en la tabla `empresas`.

Este m√≥dulo sigue el principio de separaci√≥n de responsabilidades:
no realiza scraping ni clasificaci√≥n ‚Äî√∫nicamente maneja el llenado estructurado y automatizado de informaci√≥n empresarial.

Autor: [VEAUX]
Fecha de creaci√≥n: 2025-07-24
"""


# modules/empresa_info.py

from modules.db_vacantes import fetch_all_vacantes, insert_or_update_empresa
import sqlite3
import datetime

def get_empresas_faltantes():
    
    conn = sqlite3.connect("vacantes.db")
    cursor = conn.cursor()
    cursor.execute("""
        SELECT DISTINCT company FROM vacantes
        WHERE company IS NOT NULL AND company NOT IN (
            SELECT company FROM empresas
        )
    """)
    empresas = [row[0] for row in cursor.fetchall()]
    conn.close()
    return empresas

def obtener_info_empresa(company_name):
    # Aqu√≠ puedes llamar una API o scraping inteligente
    # Por ahora usaremos datos simulados
    return {
        "company": company_name,
        "resumen_empresa": f"{company_name} is a global leader in XYZ.",
        "sector_empresa": "Technology",
        "tama√±o_empresa": "Large",
        "presencia_mexico": "S√≠",
        "glassdoor_score": 4.2,
        "last_updated": datetime.date.today().isoformat()
    }

def llenar_tabla_empresas():
    nuevas_empresas = get_empresas_faltantes()
    if nuevas_empresas:
        print(f"üîé Detectadas {len(nuevas_empresas)} nuevas empresas.")
        if len(nuevas_empresas) <= 10:
            for e in nuevas_empresas:
                print(f" - {e}")
    else:
        print("‚úÖ No hay empresas nuevas por registrar.")

    for company in nuevas_empresas:
        info = obtener_info_empresa(company)
        insert_or_update_empresa(info)
        print(f"‚úÖ Empresa a√±adida: {company}")
